{"version":3,"sources":["c8.js"],"sourcesContent":["const path = require('path');\nconst rimraf = require('rimraf');\nconst Queue = require('queue-cb');\n\nconst link = require('../link');\nconst spawn = require('../lib/spawn');\n\nmodule.exports = function c8(_args, _options, cb) {\n  link(_args, _options, (err, restore) => {\n    if (err) return cb(err);\n\n    const queue = new Queue(1);\n    queue.defer((cb) => {\n      rimraf(path.resolve(process.cwd(), 'coverage'), () => {\n        cb();\n      });\n    });\n    queue.defer((cb) => {\n      let args = ['--config', path.join(__dirname, '..', '..', '..', 'assets', 'c8rc.json')];\n      args.push('mocha');\n      args = args.concat(_args.length ? _args.slice(-1) : ['test/unit/*.test.*']);\n      spawn('c8', args, { env: { NODE_OPTIONS: '--loader ts-swc-loaders' } }, cb);\n    });\n    queue.await((err) => {\n      restore((err2) => {\n        cb(err || err2);\n      });\n    });\n  });\n};\n"],"names":["path","require","rimraf","Queue","link","spawn","module","exports","c8","_args","_options","cb","err","restore","queue","defer","resolve","process","cwd","args","join","__dirname","push","concat","length","slice","env","NODE_OPTIONS","await","err2"],"mappings":";AAAA,IAAMA,OAAOC,QAAQ;AACrB,IAAMC,SAASD,QAAQ;AACvB,IAAME,QAAQF,QAAQ;AAEtB,IAAMG,OAAOH,QAAQ;AACrB,IAAMI,QAAQJ,QAAQ;AAEtBK,OAAOC,OAAO,GAAG,SAASC,GAAGC,KAAK,EAAEC,QAAQ,EAAEC,EAAE;IAC9CP,KAAKK,OAAOC,UAAU,SAACE,KAAKC;QAC1B,IAAID,KAAK,OAAOD,GAAGC;QAEnB,IAAME,QAAQ,IAAIX,MAAM;QACxBW,MAAMC,KAAK,CAAC,SAACJ;YACXT,OAAOF,KAAKgB,OAAO,CAACC,QAAQC,GAAG,IAAI,aAAa;gBAC9CP;YACF;QACF;QACAG,MAAMC,KAAK,CAAC,SAACJ;YACX,IAAIQ,OAAO;gBAAC;gBAAYnB,KAAKoB,IAAI,CAACC,WAAW,MAAM,MAAM,MAAM,UAAU;aAAa;YACtFF,KAAKG,IAAI,CAAC;YACVH,OAAOA,KAAKI,MAAM,CAACd,MAAMe,MAAM,GAAGf,MAAMgB,KAAK,CAAC,CAAC,KAAK;gBAAC;aAAqB;YAC1EpB,MAAM,MAAMc,MAAM;gBAAEO,KAAK;oBAAEC,cAAc;gBAA0B;YAAE,GAAGhB;QAC1E;QACAG,MAAMc,KAAK,CAAC,SAAChB;YACXC,QAAQ,SAACgB;gBACPlB,GAAGC,OAAOiB;YACZ;QACF;IACF;AACF"}