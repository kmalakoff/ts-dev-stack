{"version":3,"sources":["prepareGit.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport spawn from 'cross-spawn-cb';\nimport access from 'fs-access-compat';\nimport mkdirp from 'mkdirp';\nimport { tmpdir } from 'os-shim';\nimport Queue from 'queue-cb';\nimport rimraf2 from 'rimraf2';\nimport shortHash from 'short-hash';\n\nexport default function prepareGit(git, options, callback) {\n  const cwd = options.cwd || process.cwd();\n  const pkg = JSON.parse(fs.readFileSync(path.join(cwd, 'package.json'), 'utf8'));\n  const dest = path.join(tmpdir(), pkg.name, shortHash(cwd));\n  const targetName = path.basename(git, path.extname(git));\n  const targetPath = path.join(dest, targetName);\n  mkdirp.sync(dest);\n\n  access(targetPath, (err) => {\n    if (!err && options.clean) {\n      rimraf2.sync(targetPath, { disableGlob: true });\n      err = true;\n    }\n\n    const queue = new Queue(1);\n    // does not exist - clone\n    if (err) {\n      queue.defer(spawn.bind(null, 'git', ['clone', git], { stdio: 'inherit', cwd: dest }));\n    }\n    // exists - reset git\n    else {\n      queue.defer(spawn.bind(null, 'git', ['clean', '-fd'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['reset', '--hard', 'HEAD'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['pull', '--rebase'], { stdio: 'inherit', cwd: targetPath }));\n    }\n\n    queue.await(callback);\n  });\n}\n"],"names":["fs","path","spawn","access","mkdirp","tmpdir","Queue","rimraf2","shortHash","prepareGit","git","options","callback","cwd","process","pkg","JSON","parse","readFileSync","join","dest","name","targetName","basename","extname","targetPath","sync","err","clean","disableGlob","queue","defer","bind","stdio","await"],"mappings":"AAAA,OAAOA,QAAQ,KAAK;AACpB,OAAOC,UAAU,OAAO;AACxB,OAAOC,WAAW,iBAAiB;AACnC,OAAOC,YAAY,mBAAmB;AACtC,OAAOC,YAAY,SAAS;AAC5B,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,WAAW,WAAW;AAC7B,OAAOC,aAAa,UAAU;AAC9B,OAAOC,eAAe,aAAa;AAEnC,eAAe,SAASC,WAAWC,GAAG,EAAEC,OAAO,EAAEC,QAAQ;IACvD,MAAMC,MAAMF,QAAQE,GAAG,IAAIC,QAAQD,GAAG;IACtC,MAAME,MAAMC,KAAKC,KAAK,CAACjB,GAAGkB,YAAY,CAACjB,KAAKkB,IAAI,CAACN,KAAK,iBAAiB;IACvE,MAAMO,OAAOnB,KAAKkB,IAAI,CAACd,UAAUU,IAAIM,IAAI,EAAEb,UAAUK;IACrD,MAAMS,aAAarB,KAAKsB,QAAQ,CAACb,KAAKT,KAAKuB,OAAO,CAACd;IACnD,MAAMe,aAAaxB,KAAKkB,IAAI,CAACC,MAAME;IACnClB,OAAOsB,IAAI,CAACN;IAEZjB,OAAOsB,YAAY,CAACE;QAClB,IAAI,CAACA,OAAOhB,QAAQiB,KAAK,EAAE;YACzBrB,QAAQmB,IAAI,CAACD,YAAY;gBAAEI,aAAa;YAAK;YAC7CF,MAAM;QACR;QAEA,MAAMG,QAAQ,IAAIxB,MAAM;QACxB,yBAAyB;QACzB,IAAIqB,KAAK;YACPG,MAAMC,KAAK,CAAC7B,MAAM8B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAStB;aAAI,EAAE;gBAAEuB,OAAO;gBAAWpB,KAAKO;YAAK;QACpF,OAEK;YACHU,MAAMC,KAAK,CAAC7B,MAAM8B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;aAAM,EAAE;gBAAEC,OAAO;gBAAWpB,KAAKY;YAAW;YAC1FK,MAAMC,KAAK,CAAC7B,MAAM8B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;gBAAU;aAAO,EAAE;gBAAEC,OAAO;gBAAWpB,KAAKY;YAAW;YACrGK,MAAMC,KAAK,CAAC7B,MAAM8B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAQ;aAAW,EAAE;gBAAEC,OAAO;gBAAWpB,KAAKY;YAAW;QAChG;QAEAK,MAAMI,KAAK,CAACtB;IACd;AACF"}