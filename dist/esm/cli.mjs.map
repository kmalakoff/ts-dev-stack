{"version":3,"sources":["cli.js"],"sourcesContent":["const getopts = require('getopts-compat');\nconst exit = require('exit');\nconst commands = require('./index.mjs');\ncommands['test:node'] = commands.testNode;\ncommands['test:browser'] = commands.testBrowser;\n\nmodule.exports = function cli(argv, name) {\n  if (argv.length === 0) {\n    console.log(`Command missing${name} ${argv.join(',')}`);\n    return exit(-1);\n  }\n\n  const command = commands[argv[0]];\n  if (!command) {\n    console.log(`Unrecognized command: ${argv.join(' ')}`);\n    return exit(-1);\n  }\n\n  const options = getopts(argv.slice(1), { stopEarly: true, ...(command.options || {}) });\n  const args = argv.slice(0, 1).concat(options._);\n  command(args.slice(1), options, (err) => {\n    if (err && err.message.indexOf('ExperimentalWarning') < 0) {\n      console.log(err.message);\n      return exit(err.code || -1);\n    }\n    exit(0);\n  });\n};\n"],"names":["getopts","require","exit","commands","testNode","testBrowser","module","exports","cli","argv","name","length","console","log","join","command","options","slice","stopEarly","args","concat","_","err","message","indexOf","code"],"mappings":"AAAA,MAAMA,UAAUC,QAAQ;AACxB,MAAMC,OAAOD,QAAQ;AACrB,MAAME,WAAWF,QAAQ;AACzBE,QAAQ,CAAC,YAAY,GAAGA,SAASC,QAAQ;AACzCD,QAAQ,CAAC,eAAe,GAAGA,SAASE,WAAW;AAE/CC,OAAOC,OAAO,GAAG,SAASC,IAAIC,IAAI,EAAEC,IAAI;IACtC,IAAID,KAAKE,MAAM,KAAK,GAAG;QACrBC,QAAQC,GAAG,CAAC,CAAC,eAAe,EAAEH,KAAK,CAAC,EAAED,KAAKK,IAAI,CAAC,KAAK,CAAC;QACtD,OAAOZ,KAAK,CAAC;IACf;IAEA,MAAMa,UAAUZ,QAAQ,CAACM,IAAI,CAAC,EAAE,CAAC;IACjC,IAAI,CAACM,SAAS;QACZH,QAAQC,GAAG,CAAC,CAAC,sBAAsB,EAAEJ,KAAKK,IAAI,CAAC,KAAK,CAAC;QACrD,OAAOZ,KAAK,CAAC;IACf;IAEA,MAAMc,UAAUhB,QAAQS,KAAKQ,KAAK,CAAC,IAAI;QAAEC,WAAW;QAAM,GAAIH,QAAQC,OAAO,IAAI,CAAC,CAAC;IAAE;IACrF,MAAMG,OAAOV,KAAKQ,KAAK,CAAC,GAAG,GAAGG,MAAM,CAACJ,QAAQK,CAAC;IAC9CN,QAAQI,KAAKF,KAAK,CAAC,IAAID,SAAS,CAACM;QAC/B,IAAIA,OAAOA,IAAIC,OAAO,CAACC,OAAO,CAAC,yBAAyB,GAAG;YACzDZ,QAAQC,GAAG,CAACS,IAAIC,OAAO;YACvB,OAAOrB,KAAKoB,IAAIG,IAAI,IAAI,CAAC;QAC3B;QACAvB,KAAK;IACP;AACF"}