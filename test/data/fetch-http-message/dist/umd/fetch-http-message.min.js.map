{"version":3,"file":"fetch-http-message.min.js","sources":["../../src/index.ts","../../src/blobToString.ts"],"sourcesContent":["import blobToString from \"./blobToString\";\n\nexport interface HeadersObject {\n  [key: string]: string;\n}\n\n// https://github.com/node-fetch/node-fetch/blob/main/%40types/index.d.ts\nexport type HeadersInit =\n  | Headers\n  | HeadersObject\n  | Record<string, string>\n  | Iterable<readonly [string, string]>\n  | Iterable<Iterable<string>>;\nconst hasHeaders = typeof Headers !== \"undefined\";\n\nexport type BodyInit = Blob | Buffer | URLSearchParams | string;\nconst hasBlob = typeof Blob !== \"undefined\";\nconst hasBuffer = typeof Buffer !== \"undefined\";\nconst hasURLSearchParams = typeof URLSearchParams !== \"undefined\";\n\n// export type RequestRedirect = 'error' | 'follow' | 'manual';\nexport interface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n  // redirect?: RequestRedirect;\n}\n\nexport type RequestInfo = string | Request;\nexport interface Request {\n  readonly headers: Headers | HeadersObject;\n  readonly method: string;\n  // readonly redirect: RequestRedirect;\n  readonly url: string;\n}\n\nfunction isRequest(object) {\n  return typeof object === \"object\";\n}\n\n/**\n * Generate an http message string using the fetch API\n *\n * @param input Fetch input\n * @param init Fetch init\n * @returns The http message string\n */\nexport default function fetchHttpMessage(input: RequestInfo, init?: RequestInit): string {\n  if (input === undefined) throw new Error(\"Input is expected\");\n  if (init === undefined) init = {};\n\n  let url;\n  if (isRequest(input)) url = (input as Request).url;\n  else {\n    url = input as string;\n    input = {} as Request;\n  }\n\n  let method = init.method || (input as Request).method || \"GET\";\n  method = method.toUpperCase();\n  const lines = [`${method} ${url} HTTP/1.1`];\n\n  const headers = init.headers || (input as Request).headers;\n  if (headers !== undefined) {\n    /* c8 ignore start */\n    if (hasHeaders && headers instanceof Headers) {\n      for (const pair of (headers as Headers).entries()) lines.push(`${pair[0]}: ${pair[1]}`);\n    } else {\n      /* c8 ignore stop */\n      for (const key in headers as HeadersObject) lines.push(`${key}: ${headers[key]}`);\n    }\n  }\n\n  const body = init.body;\n  if (body !== undefined) {\n    if (~[\"GET\", \"HEAD\"].indexOf(method)) throw new Error(`Option body not valid with method ${method}`);\n    /* c8 ignore start */\n    if (hasBlob && body instanceof Blob) {\n      lines.push(\"\");\n      lines.push(blobToString(body));\n    } else if (\n      /* c8 ignore stop */\n      typeof body === \"string\" ||\n      body instanceof String ||\n      /* c8 ignore start */\n      (hasBuffer && body instanceof Buffer) ||\n      (hasURLSearchParams && body instanceof URLSearchParams)\n      /* c8 ignore stop */\n    ) {\n      lines.push(\"\");\n      lines.push(body.toString());\n    } else throw new Error(\"Option body should be convertible to a string\");\n  }\n  return lines.join(\"\\r\\n\");\n}\n","// https://stackoverflow.com/a/23024613/3150390\n/* c8 ignore start */\nexport default function blobToString(b: Blob): string {\n  const u = URL.createObjectURL(b);\n  const x = new XMLHttpRequest();\n  x.open(\"GET\", u, false);\n  x.send();\n  URL.revokeObjectURL(u);\n  return x.responseText;\n}\n/* c8 ignore stop */\n"],"names":["hasHeaders","Headers","hasBlob","Blob","hasBuffer","Buffer","hasURLSearchParams","URLSearchParams","input","init","undefined","Error","url","_typeof","method","toUpperCase","lines","headers","entries","pair","push","key","b","u","x","body","indexOf","URL","createObjectURL","XMLHttpRequest","open","send","revokeObjectURL","responseText","String","toString","join"],"mappings":"89CAaA,IAAMA,EAAgC,oBAAZC,QAGpBC,EAA0B,oBAATC,KACjBC,EAA8B,oBAAXC,OACnBC,EAAgD,oBAApBC,uBA6BnB,SAA0BC,EAAoBC,WAC7CC,IAAVF,EAAqB,MAAM,IAAIG,MAAM,yBAGrCC,OAFSF,IAATD,IAAoBA,EAAO,IAZN,WAAlBI,EAeOL,GAAQI,EAAOJ,EAAkBI,KAE7CA,EAAMJ,EACNA,EAAQ,QAGNM,EAASL,EAAKK,QAAWN,EAAkBM,QAAU,MACzDA,EAASA,EAAOC,kBACVC,EAAQ,WAAIF,cAAUF,gBAEtBK,EAAUR,EAAKQ,SAAYT,EAAkBS,gBACnCP,IAAZO,KAEEjB,GAAciB,aAAmBhB,QAAS,WACxBgB,EAAoBC,+CAA7BC,UAAwCH,EAAMI,eAAQD,EAAK,gBAAOA,EAAK,8CAG7E,IAAME,KAAOJ,EAA0BD,EAAMI,eAAQC,eAAQJ,EAAQI,SCnE3CC,EAC7BC,EACAC,EDqEAC,EAAOhB,EAAKgB,aACLf,IAATe,EAAoB,KACjB,CAAC,MAAO,QAAQC,QAAQZ,GAAS,MAAM,IAAIH,kDAA2CG,OAEvFZ,GAAWuB,aAAgBtB,KAC7Ba,EAAMI,KAAK,IACXJ,EAAMI,MC7EyBE,ED6EPG,EC5EtBF,EAAII,IAAIC,gBAAgBN,IACxBE,EAAI,IAAIK,gBACZC,KAAK,MAAOP,GAAG,GACjBC,EAAEO,OACFJ,IAAIK,gBAAgBT,GACbC,EAAES,mBDwEA,CAAA,KAEW,iBAATR,GACPA,aAAgBS,QAEf9B,GAAaqB,aAAgBpB,QAC7BC,GAAsBmB,aAAgBlB,iBAKlC,MAAM,IAAII,MAAM,iDAFrBK,EAAMI,KAAK,IACXJ,EAAMI,KAAKK,EAAKU,oBAGbnB,EAAMoB,KAAK"}