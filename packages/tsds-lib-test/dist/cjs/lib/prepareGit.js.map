{"version":3,"sources":["prepareGit.js"],"sourcesContent":["const path = require('path');\nconst Queue = require('queue-cb');\nconst spawn = require('cross-spawn-cb');\nconst access = require('fs-access-compat');\nconst rimraf2 = require('rimraf2');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst mkdirp = require('mkdirp');\nconst shortHash = require('short-hash');\n\nmodule.exports = function prepareGit(git, options, callback) {\n  const cwd = options.cwd || process.cwd();\n  const pkg = require(path.join(cwd, 'package.json'));\n  const dest = path.join(tmpdir(), pkg.name, shortHash(cwd));\n  const targetName = path.basename(git, path.extname(git));\n  const targetPath = path.join(dest, targetName);\n  mkdirp.sync(dest);\n\n  access(targetPath, (err) => {\n    if (!err && options.clean) {\n      rimraf2.sync(targetPath, { disableGlob: true });\n      err = true;\n    }\n\n    const queue = new Queue(1);\n    // does not exist - clone\n    if (err) {\n      queue.defer(spawn.bind(null, 'git', ['clone', git], { stdio: 'inherit', cwd: dest }));\n    }\n    // exists - reset git\n    else {\n      queue.defer(spawn.bind(null, 'git', ['clean', '-fd'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['reset', '--hard', 'HEAD'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['pull', '--rebase'], { stdio: 'inherit', cwd: targetPath }));\n    }\n\n    queue.await(callback);\n  });\n}\n"],"names":["path","require","Queue","spawn","access","rimraf2","tmpdir","mkdirp","shortHash","module","exports","prepareGit","git","options","callback","cwd","process","pkg","join","dest","name","targetName","basename","extname","targetPath","sync","err","clean","disableGlob","queue","defer","bind","stdio","await"],"mappings":";AAAA,IAAMA,OAAOC,QAAQ;AACrB,IAAMC,QAAQD,QAAQ;AACtB,IAAME,QAAQF,QAAQ;AACtB,IAAMG,SAASH,QAAQ;AACvB,IAAMI,UAAUJ,QAAQ;AACxB,IAAMK,SAASL,QAAQ,MAAMK,MAAM,IAAIL,QAAQ,WAAWK,MAAM;AAChE,IAAMC,SAASN,QAAQ;AACvB,IAAMO,YAAYP,QAAQ;AAE1BQ,OAAOC,OAAO,GAAG,SAASC,WAAWC,GAAG,EAAEC,OAAO,EAAEC,QAAQ;IACzD,IAAMC,MAAMF,QAAQE,GAAG,IAAIC,QAAQD,GAAG;IACtC,IAAME,MAAMhB,QAAQD,KAAKkB,IAAI,CAACH,KAAK;IACnC,IAAMI,OAAOnB,KAAKkB,IAAI,CAACZ,UAAUW,IAAIG,IAAI,EAAEZ,UAAUO;IACrD,IAAMM,aAAarB,KAAKsB,QAAQ,CAACV,KAAKZ,KAAKuB,OAAO,CAACX;IACnD,IAAMY,aAAaxB,KAAKkB,IAAI,CAACC,MAAME;IACnCd,OAAOkB,IAAI,CAACN;IAEZf,OAAOoB,YAAY,SAACE;QAClB,IAAI,CAACA,OAAOb,QAAQc,KAAK,EAAE;YACzBtB,QAAQoB,IAAI,CAACD,YAAY;gBAAEI,aAAa;YAAK;YAC7CF,MAAM;QACR;QAEA,IAAMG,QAAQ,IAAI3B,MAAM;QACxB,yBAAyB;QACzB,IAAIwB,KAAK;YACPG,MAAMC,KAAK,CAAC3B,MAAM4B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAASnB;aAAI,EAAE;gBAAEoB,OAAO;gBAAWjB,KAAKI;YAAK;QACpF,OAEK;YACHU,MAAMC,KAAK,CAAC3B,MAAM4B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;aAAM,EAAE;gBAAEC,OAAO;gBAAWjB,KAAKS;YAAW;YAC1FK,MAAMC,KAAK,CAAC3B,MAAM4B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;gBAAU;aAAO,EAAE;gBAAEC,OAAO;gBAAWjB,KAAKS;YAAW;YACrGK,MAAMC,KAAK,CAAC3B,MAAM4B,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAQ;aAAW,EAAE;gBAAEC,OAAO;gBAAWjB,KAAKS;YAAW;QAChG;QAEAK,MAAMI,KAAK,CAACnB;IACd;AACF"}