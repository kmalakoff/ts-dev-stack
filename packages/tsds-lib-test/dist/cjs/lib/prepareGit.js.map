{"version":3,"sources":["prepareGit.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport spawn from 'cross-spawn-cb';\nimport access from 'fs-access-compat';\nimport mkdirp from 'mkdirp';\nimport { tmpdir } from 'os-shim';\nimport Queue from 'queue-cb';\nimport rimraf2 from 'rimraf2';\nimport shortHash from 'short-hash';\n\nexport default function prepareGit(git, options, callback) {\n  const cwd = options.cwd || process.cwd();\n  const pkg = JSON.parse(fs.readFileSync(path.join(cwd, 'package.json'), 'utf8'));\n  const dest = path.join(tmpdir(), pkg.name, shortHash(cwd));\n  const targetName = path.basename(git, path.extname(git));\n  const targetPath = path.join(dest, targetName);\n  mkdirp.sync(dest);\n\n  access(targetPath, (err) => {\n    if (!err && options.clean) {\n      rimraf2.sync(targetPath, { disableGlob: true });\n      err = true;\n    }\n\n    const queue = new Queue(1);\n    // does not exist - clone\n    if (err) {\n      queue.defer(spawn.bind(null, 'git', ['clone', git], { stdio: 'inherit', cwd: dest }));\n    }\n    // exists - reset git\n    else {\n      queue.defer(spawn.bind(null, 'git', ['clean', '-fd'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['reset', '--hard', 'HEAD'], { stdio: 'inherit', cwd: targetPath }));\n      queue.defer(spawn.bind(null, 'git', ['pull', '--rebase'], { stdio: 'inherit', cwd: targetPath }));\n    }\n\n    queue.await(callback);\n  });\n}\n"],"names":["prepareGit","git","options","callback","cwd","process","pkg","JSON","parse","fs","readFileSync","path","join","dest","tmpdir","name","shortHash","targetName","basename","extname","targetPath","mkdirp","sync","access","err","clean","rimraf2","disableGlob","queue","Queue","defer","spawn","bind","stdio","await"],"mappings":";;;;+BAUA;;;eAAwBA;;;yDAVT;2DACE;mEACC;qEACC;6DACA;sBACI;8DACL;8DACE;gEACE;;;;;;AAEP,SAASA,WAAWC,GAAG,EAAEC,OAAO,EAAEC,QAAQ;IACvD,IAAMC,MAAMF,QAAQE,GAAG,IAAIC,QAAQD,GAAG;IACtC,IAAME,MAAMC,KAAKC,KAAK,CAACC,WAAE,CAACC,YAAY,CAACC,aAAI,CAACC,IAAI,CAACR,KAAK,iBAAiB;IACvE,IAAMS,OAAOF,aAAI,CAACC,IAAI,CAACE,IAAAA,cAAM,KAAIR,IAAIS,IAAI,EAAEC,IAAAA,kBAAS,EAACZ;IACrD,IAAMa,aAAaN,aAAI,CAACO,QAAQ,CAACjB,KAAKU,aAAI,CAACQ,OAAO,CAAClB;IACnD,IAAMmB,aAAaT,aAAI,CAACC,IAAI,CAACC,MAAMI;IACnCI,eAAM,CAACC,IAAI,CAACT;IAEZU,IAAAA,uBAAM,EAACH,YAAY,SAACI;QAClB,IAAI,CAACA,OAAOtB,QAAQuB,KAAK,EAAE;YACzBC,gBAAO,CAACJ,IAAI,CAACF,YAAY;gBAAEO,aAAa;YAAK;YAC7CH,MAAM;QACR;QAEA,IAAMI,QAAQ,IAAIC,gBAAK,CAAC;QACxB,yBAAyB;QACzB,IAAIL,KAAK;YACPI,MAAME,KAAK,CAACC,qBAAK,CAACC,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS/B;aAAI,EAAE;gBAAEgC,OAAO;gBAAW7B,KAAKS;YAAK;QACpF,OAEK;YACHe,MAAME,KAAK,CAACC,qBAAK,CAACC,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;aAAM,EAAE;gBAAEC,OAAO;gBAAW7B,KAAKgB;YAAW;YAC1FQ,MAAME,KAAK,CAACC,qBAAK,CAACC,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAS;gBAAU;aAAO,EAAE;gBAAEC,OAAO;gBAAW7B,KAAKgB;YAAW;YACrGQ,MAAME,KAAK,CAACC,qBAAK,CAACC,IAAI,CAAC,MAAM,OAAO;gBAAC;gBAAQ;aAAW,EAAE;gBAAEC,OAAO;gBAAW7B,KAAKgB;YAAW;QAChG;QAEAQ,MAAMM,KAAK,CAAC/B;IACd;AACF"}