{"version":3,"sources":["umd.js"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst rimraf = require('rimraf');\nconst assign = require('just-extend');\nconst Queue = require('queue-cb');\n\nconst spawn = require('../lib/spawn');\nconst source = require('../lib/source');\n\nmodule.exports = function umd(_args, options, cb) {\n  const cwd = options.cwd || process.cwd();\n  const src = path.resolve(cwd, source(options));\n\n  options = assign({}, options);\n  options.type = 'umd';\n  options.sourceMaps = true;\n  options.dest = path.join(cwd, 'dist', 'umd');\n  rimraf(options.dest, () => {\n    const queue = new Queue(1);\n    queue.defer(spawn.bind(null, 'rollup', ['--config', path.resolve(__dirname, '..', '..', 'esm', 'rollup-swc', 'index.mjs'), '--input', src], { cwd }));\n    queue.defer(fs.writeFile.bind(null, path.join(options.dest, 'package.json'), '{\"type\":\"commonjs\"}'));\n    queue.await(cb);\n  });\n};\n"],"names":["fs","require","path","rimraf","assign","Queue","spawn","source","module","exports","umd","_args","options","cb","cwd","process","src","resolve","type","sourceMaps","dest","join","queue","defer","bind","__dirname","writeFile","await"],"mappings":"AAAA,MAAMA,KAAKC,QAAQ;AACnB,MAAMC,OAAOD,QAAQ;AACrB,MAAME,SAASF,QAAQ;AACvB,MAAMG,SAASH,QAAQ;AACvB,MAAMI,QAAQJ,QAAQ;AAEtB,MAAMK,QAAQL,QAAQ;AACtB,MAAMM,SAASN,QAAQ;AAEvBO,OAAOC,OAAO,GAAG,SAASC,IAAIC,KAAK,EAAEC,OAAO,EAAEC,EAAE;IAC9C,MAAMC,MAAMF,QAAQE,GAAG,IAAIC,QAAQD,GAAG;IACtC,MAAME,MAAMd,KAAKe,OAAO,CAACH,KAAKP,OAAOK;IAErCA,UAAUR,OAAO,CAAC,GAAGQ;IACrBA,QAAQM,IAAI,GAAG;IACfN,QAAQO,UAAU,GAAG;IACrBP,QAAQQ,IAAI,GAAGlB,KAAKmB,IAAI,CAACP,KAAK,QAAQ;IACtCX,OAAOS,QAAQQ,IAAI,EAAE;QACnB,MAAME,QAAQ,IAAIjB,MAAM;QACxBiB,MAAMC,KAAK,CAACjB,MAAMkB,IAAI,CAAC,MAAM,UAAU;YAAC;YAAYtB,KAAKe,OAAO,CAACQ,WAAW,MAAM,MAAM,OAAO,cAAc;YAAc;YAAWT;SAAI,EAAE;YAAEF;QAAI;QAClJQ,MAAMC,KAAK,CAACvB,GAAG0B,SAAS,CAACF,IAAI,CAAC,MAAMtB,KAAKmB,IAAI,CAACT,QAAQQ,IAAI,EAAE,iBAAiB;QAC7EE,MAAMK,KAAK,CAACd;IACd;AACF"}