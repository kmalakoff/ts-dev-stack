{"version":3,"sources":["compileFile.js"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst Queue = require('queue-cb');\nconst once = require('call-once-fn');\nconst mkdirp = require('mkdirp');\n\nconst { transformSync } = require('ts-swc-loaders');\n\nconst regexDependencies = require('./regexDependencies');\nconst regexESM = regexDependencies(true);\nconst regexCJS = regexDependencies();\n\nconst importReplaceMJS = ['.js', '.ts', '.tsx', '.mts', '.mjs'];\nconst importReplaceCJS = ['.cts'];\nconst requireReplaceJS = ['.mjs', '.cjs', '.ts', '.tsx', '.mts', '.cts'];\n\nfunction makeReplacements(code, regex, extensions, extension) {\n  let matches = [];\n  let match = regex.exec(code);\n  while (match) {\n    const dependency = match[1] || match[2] || match[3] || match[4];\n    const ext = extensions.find((x) => dependency.slice(-x.length) === x);\n    if (ext) matches.push({ ext, match, dependency });\n    match = regex.exec(code);\n  }\n\n  matches = matches.reverse();\n  for (const match of matches) {\n    const start = match.match.index + match.match[0].indexOf(match.dependency) + match.dependency.indexOf(match.ext);\n    code = code.substring(0, start) + extension + code.substring(start + match.ext.length);\n  }\n  return code;\n}\n\n// https://github.com/vercel/next.js/blob/20b63e13ab2631d6043277895d373aa31a1b327c/packages/next/taskfile-swc.js#L118-L125\nconst interopClientDefaultExport = \"/* CJS INTEROP */ if (exports.__esModule && exports.default) { Object.defineProperty(exports.default, '__esModule', { value: true }); for (var key in exports) exports.default[key] = exports[key]; module.exports = exports.default; }\";\n\nmodule.exports = function compileFile(entry, options, callback) {\n  fs.readFile(entry.fullPath, 'utf8', (err, contents) => {\n    if (err) return callback(err);\n    callback = once(callback);\n\n    try {\n      let config = options.config;\n\n      // overrides for cjs\n      if (options.type === 'cjs') {\n        config = { ...config };\n        config.config = { ...(config.config || {}) };\n        config.config.compilerOptions = { ...(config.config.compilerOptions || {}) };\n        config.config.compilerOptions.module = 'CommonJS';\n        config.config.compilerOptions.target = 'ES5';\n      }\n\n      const output = transformSync(contents, entry.basename, config);\n      const relname = entry.path.replace(/\\.[^/.]+$/, '');\n      let ext = path.extname(entry.path);\n\n      // patch .mjs imports\n      if (options.type === 'esm') {\n        ext = importReplaceMJS.indexOf(ext) >= 0 ? '.mjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceMJS, '.mjs');\n        ext = importReplaceCJS.indexOf(ext) >= 0 ? '.cjs' : ext;\n        output.code = makeReplacements(output.code, regexESM, importReplaceCJS, '.cjs');\n      } else {\n        ext = requireReplaceJS.indexOf(ext) >= 0 ? '.js' : ext;\n        output.code = makeReplacements(output.code, regexCJS, requireReplaceJS, '.js');\n        output.code += interopClientDefaultExport;\n      }\n\n      mkdirp(path.dirname(path.join(options.dest, relname + ext)), () => {\n        const outQueue = new Queue();\n        outQueue.defer(fs.writeFile.bind(null, path.join(options.dest, relname + ext), output.code, 'utf8'));\n        !options.sourceMaps || outQueue.defer(fs.writeFile.bind(null, path.join(options.dest, `${relname + ext}.map`), output.map, 'utf8'));\n        outQueue.await(callback);\n      });\n    } catch (err) {\n      callback(err);\n    }\n  });\n};\n"],"names":["path","require","fs","Queue","once","mkdirp","transformSync","regexDependencies","regexESM","regexCJS","importReplaceMJS","importReplaceCJS","requireReplaceJS","makeReplacements","code","regex","extensions","extension","matches","match","exec","dependency","ext","find","x","slice","length","push","reverse","start","index","indexOf","substring","interopClientDefaultExport","module","exports","compileFile","entry","options","callback","readFile","fullPath","err","contents","config","type","compilerOptions","target","output","basename","relname","replace","extname","dirname","join","dest","outQueue","defer","writeFile","bind","sourceMaps","map","await"],"mappings":"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"}